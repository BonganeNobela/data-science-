{
    "Logistic Regression": {
        "model": "LogisticRegression",
        "params": {
            "model__C": [
                0.01,
                0.1,
                1.0,
                10.0
            ],
            "model__solver": [
                "liblinear",
                "lbfgs"
            ]
        }
    },
    "MultinomialNB": {
        "model": "MultinomialNB",
        "params": {
            "model__alpha": [
                0.1,
                0.5,
                1.0
            ]
        }
    },
    "Random Forest": {
        "model": "RandomForestClassifier",
        "params": {
            "model__n_estimators": [
                100,
                200
            ],
            "model__max_depth": [
                null,
                10,
                20
            ],
            "model__min_samples_split": [
                2,
                5
            ]
        }
    },
    "Linear SVC": {
        "model": "LinearSVC",
        "params": {
            "model__C": [
                0.01,
                0.1,
                1.0,
                10.0
            ],
            "model__max_iter": [
                1000,
                2000
            ]
        }
    },
    "Gradient Boosting": {
        "model": "GradientBoostingClassifier",
        "params": {
            "model__n_estimators": [
                100,
                200
            ],
            "model__learning_rate": [
                0.05,
                0.1
            ],
            "model__max_depth": [
                3,
                5
            ]
        }
    },
    "AdaBoost": {
        "model": "AdaBoostClassifier",
        "params": {
            "model__n_estimators": [
                50,
                100,
                200
            ],
            "model__learning_rate": [
                0.01,
                0.1,
                1.0
            ]
        }
    },
    "KNN": {
        "model": "KNeighborsClassifier",
        "params": {
            "model__n_neighbors": [
                3,
                5,
                7
            ],
            "model__weights": [
                "uniform",
                "distance"
            ]
        }
    },
    "Decision Tree": {
        "model": "DecisionTreeClassifier",
        "params": {
            "model__max_depth": [
                null,
                10,
                20
            ],
            "model__min_samples_split": [
                2,
                5,
                10
            ]
        }
    }
}